{"ast":null,"code":"var _jsxFileName = \"/home/otunba/Desktop/React/Quizbee/quizbee/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"./components/QuestionBox\";\n\nclass QuizBee extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {}\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"QuizBee\"), this.state.questionBank.length > 0 && this.state.questionBank.map(({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => React.createElement(QuestionBox, {\n      question: question,\n      options: answers,\n      key: questionId,\n      selected: answer => this.computeAnswer(answer, correct),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(QuizBee, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/otunba/Desktop/React/Quizbee/quizbee/src/index.js"],"names":["React","Component","ReactDOM","quizService","QuestionBox","QuizBee","state","questionBank","score","getQuestions","then","question","setState","computeAnswer","answer","correctAnswer","componentDidMount","render","length","map","answers","correct","questionId","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAGA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADoB;;AAAA,SAM5BC,YAN4B,GAMb,MAAM;AACjBN,MAAAA,WAAW,GAAGO,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,aAAKC,QAAL,CAAe;AACXL,UAAAA,YAAY,EAAEI;AADH,SAAf;AAGH,OAJD;AAKH,KAZ2B;;AAAA,SAa5BE,aAb4B,GAaZ,CAACC,MAAD,EAASC,aAAT,KAA2B;AACvC,UAAID,MAAM,KAAKC,aAAf,EAA8B,CAE7B;AACJ,KAjB2B;AAAA;;AAkB5BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,YAAL;AACH;;AACDQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKX,KAAL,CAAWC,YAAX,CAAwBW,MAAxB,GAAiC,CAAjC,IAAsC,KAAKZ,KAAL,CAAWC,YAAX,CAAwBY,GAAxB,CACnC,CAAC;AAACR,MAAAA,QAAD;AAAWS,MAAAA,OAAX;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B,KAAD,KACI,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAEX,QADV;AAEA,MAAA,OAAO,EAAES,OAFT;AAGA,MAAA,GAAG,EAAEE,UAHL;AAIA,MAAA,QAAQ,EAAER,MAAM,IAAI,KAAKD,aAAL,CAAmBC,MAAnB,EAA2BO,OAA3B,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF+B,CAF3C,CADJ;AAcH;;AApC2B;;AAuChCnB,QAAQ,CAACe,MAAT,CAAiB,oBAAE,OAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAjB,EAAiCM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjC","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"./components/QuestionBox\";\n\n\nclass QuizBee extends Component {\n    state = {\n        questionBank: [],\n        score: 0\n    };\n\n    getQuestions = () => {\n        quizService().then(question => {\n            this.setState ({\n                questionBank: question\n            });\n        });\n    };\n    computeAnswer = (answer, correctAnswer) => {\n        if (answer === correctAnswer) {\n\n        }\n    }\n    componentDidMount() {\n        this.getQuestions();\n    }\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"title\">QuizBee</div>\n                {this.state.questionBank.length > 0 && this.state.questionBank.map(\n                    ({question, answers, correct, questionId}) => (\n                        <QuestionBox \n                        question={question} \n                        options={answers} \n                        key={questionId} \n                        selected={answer => this.computeAnswer(answer, correct)}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nReactDOM.render( < QuizBee / > , document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}